How to find splittings in a D-symbol?

1. Take the barycentric-simplex vertice classes (later referred to as
vertices...)

2. Find every possible 2-partition of these vertices, which have the following
properties:
  - There are at least 2 vertices in a partition
  - There are 2 type of edges between vertices: same partition, other partition
  - Any 2 vertices can be connected with some "same partition" edges and at most
    1 "other partition" edge. (equiv: Both partitions are connected.)

3. Facets must have even number of "other partition"/"split" edges. So there can be 2
type of facets: with 0 or with 2 "other partition" edges.

4. Simpleces can be of 3 types:
  - without "other partition" edges
  - 1-3 vertices in a partition with 3 "other partition" edges
  - 2-2 vertices in a partition with 4 "other partition" edges

5. For every possible partitioning: Take "other partition" edges, every facet
(triangle) which has exactly 2 "other partition" edges and every simplex with 
"other partition" edges. These form a 2 dimensional tiling with triangles and 
quadrangles (edges become vertices, facets become edges, simpleces become
triangles or quadrangles), where the combinatorial "angles" are known. (This is
something like a splitting, but we don't know yet if this is a S^2, E^2 os H^2 
tiling.)

6. We can use the combinatorial curvature function for the above 2 dimensional
tiling, with a little modification: for quadrangles we have to write
2-1/m_{01}-1/m_{12}-1/m_{23}-1/m_{30} instead of 1-1/m_{01}-1/m_{12}-1/m_{20}.
(The combinatorial curvature function does not increase if we increase the value
of parameters.)
Watch out for bad orbifolds in S^2...


C++:
- Classes:
  * simplex:
    + simplex vertices:
      Components of the D-diagram, with 1 color cancelled (Shall we use the
      D-diagram/symbol representation? yes, that's the easiest)
    + simplex edges:
      Those vertex pairs, that has common simplex-orbits (Representation: 2
      vertices)
    + Not needed: simplex facets:
      Those 3 vertices, that has common simplex-orbits (Representation: 3
      vertices or 2 simplex-orbits?)
    + We need to find them all:
      o For each simplex-orbit it's possible to find the vertices for edges and
      facets
      o We have to deal with duplicates
  * partition:
    + Set of all vertices
    + Set of vertices in 1 partition (the other can be computed...)
    + Set of "other partition" edges
    + Not needed: How to find simplex facets belonging to 2 edges? (1 vertex is common,
      and ...) (Every facet, that has an "other partition" edge is needed.)
    + How to find split simplex-orbits? (at least one "other partition" edge)
    + How can we find all possible partitions?:
      Take the first vertex.
      LABEL1:
      While possible: take another vertex that is connected to our current set and not in no-good list 
        Check if other partition is connected, if so, we have found a possible
	  partitioning
	Restart at LABEL1
	Put last selected vertex to no-good list
  * "general" tiling:
    + triangles
    + quadrangles
    + with known M matrix-function values
    + Goal: Compute the combinatorial angle function:
      sum=0
      For every "split" simplex-orbit:
        if simplex-orbit becomes triangle:
	  sum+=1-1/m1-1/m2-1/m3
	elseif simplex-orbit becomes quadrangle:
	  sum+=2-1/m1-1/m2-1/m3-1/m4
      if sum<0:
        spherical
      elsif sum=~0:
        Euclidean
      else:
        hiperbolic
